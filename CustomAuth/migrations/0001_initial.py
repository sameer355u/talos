# Generated by Django 4.2.7 on 2023-12-06 18:27

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MstGroup',
            fields=[
                ('GroupId', models.AutoField(primary_key=True, serialize=False)),
                ('GroupName', models.CharField(max_length=255)),
                ('GroupDesc', models.CharField(max_length=255)),
                ('ClinicId', models.IntegerField()),
                ('ActiveFlag', models.CharField(max_length=1)),
                ('CreatedBy', models.IntegerField()),
                ('UpdatedBy', models.IntegerField()),
                ('CreationDateTime', models.DateTimeField(auto_now_add=True)),
                ('UpdationDateTime', models.DateTimeField(auto_now=True)),
                ('DeleteFlag', models.CharField(default='A', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='MstMenuItem',
            fields=[
                ('MenuItemId', models.AutoField(primary_key=True, serialize=False)),
                ('MenuItemName', models.CharField(max_length=255)),
                ('MenuItemDesc', models.CharField(max_length=255)),
                ('MainMenuId', models.IntegerField()),
                ('WebpageLink', models.CharField(max_length=255)),
                ('ClinicId', models.IntegerField()),
                ('ActiveFlag', models.CharField(max_length=1)),
                ('CreatedBy', models.IntegerField()),
                ('UpdatedBy', models.IntegerField()),
                ('CreationDateTime', models.DateTimeField(auto_now_add=True)),
                ('UpdationDateTime', models.DateTimeField(auto_now=True)),
                ('DeleteFlag', models.CharField(default='A', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='MstRole',
            fields=[
                ('RoleId', models.AutoField(primary_key=True, serialize=False)),
                ('RoleName', models.CharField(max_length=255)),
                ('RoleDesc', models.CharField(max_length=255)),
                ('ClinicId', models.IntegerField()),
                ('ActiveFlag', models.CharField(max_length=1)),
                ('CreatedBy', models.IntegerField()),
                ('UpdatedBy', models.IntegerField()),
                ('CreationDateTime', models.DateTimeField(auto_now_add=True)),
                ('UpdationDateTime', models.DateTimeField(auto_now=True)),
                ('DeleteFlag', models.CharField(default='A', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField()),
                ('name', models.CharField(max_length=50, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('create_date', models.DateField(auto_now_add=True)),
                ('update_date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('create_date', models.DateField(auto_now_add=True)),
                ('update_date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField(null=True)),
                ('phone', models.CharField(max_length=13, unique=True)),
                ('mpo_status', models.CharField(default='Pending', max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='CustomAuth.professionaltype')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('Doctor_dashboard', 'Doctor_dashboard'), ('Patient_dashboard', 'Patient_dashboard'), ('Others_dashboard', 'Others_dashboard')),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Address1', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('CustomAuth.user',),
        ),
        migrations.CreateModel(
            name='UserProfession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('create_date', models.DateField(auto_now_add=True)),
                ('update_date', models.DateField(auto_now=True)),
                ('permission', models.ManyToManyField(blank=True, to='CustomAuth.permission')),
                ('professional_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='CustomAuth.professionaltype')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('create_date', models.DateField(auto_now_add=True)),
                ('update_date', models.DateField(auto_now=True)),
                ('permission', models.ManyToManyField(to='CustomAuth.permission')),
                ('professional_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='CustomAuth.professionaltype')),
            ],
        ),
        migrations.CreateModel(
            name='MstUserGroup',
            fields=[
                ('UsergroupId', models.AutoField(primary_key=True, serialize=False)),
                ('ClinicId', models.IntegerField()),
                ('ActiveFlag', models.CharField(default='A', max_length=1)),
                ('CreatedBy', models.IntegerField()),
                ('UpdatedBy', models.IntegerField()),
                ('CreationDateTime', models.DateTimeField(auto_now_add=True)),
                ('UpdationDateTime', models.DateTimeField(auto_now=True)),
                ('DeleteFlag', models.CharField(default='A', max_length=1)),
                ('GroupIdFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CustomAuth.mstgroup')),
                ('UserIdFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MstRoleMenuItem',
            fields=[
                ('RoleMenuItemId', models.AutoField(primary_key=True, serialize=False)),
                ('ClinicId', models.IntegerField()),
                ('ActiveFlag', models.CharField(default='A', max_length=1)),
                ('CreatedBy', models.IntegerField()),
                ('UpdatedBy', models.IntegerField()),
                ('CreationDateTime', models.DateTimeField(auto_now_add=True)),
                ('UpdationDateTime', models.DateTimeField(auto_now=True)),
                ('DeleteFlag', models.CharField(default='A', max_length=1)),
                ('MenuItemIdFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CustomAuth.mstmenuitem')),
                ('RoleIdFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CustomAuth.mstrole')),
            ],
        ),
        migrations.CreateModel(
            name='MstGroupRole',
            fields=[
                ('GrouproleId', models.AutoField(primary_key=True, serialize=False)),
                ('ClinicId', models.IntegerField()),
                ('ActiveFlag', models.CharField(max_length=1)),
                ('CreatedBy', models.IntegerField()),
                ('UpdatedBy', models.IntegerField()),
                ('CreationDateTime', models.DateTimeField(auto_now_add=True)),
                ('UpdationDateTime', models.DateTimeField(auto_now=True)),
                ('DeleteFlag', models.CharField(default='A', max_length=1)),
                ('GroupIdFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CustomAuth.mstgroup')),
                ('RoleIdFK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CustomAuth.mstrole')),
            ],
        ),
    ]
